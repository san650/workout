{"version":3,"sources":["data.js","App.js","serviceWorker.js","index.js"],"names":["data","title","weeks","days","exercises","exercise","name","sets","reps","tempo","rest","weights","Training","_ref","react_default","a","createElement","map","week","Week","Object","assign","key","_ref2","Exercise","_ref3","join","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e466405a.chunk.js","sourcesContent":["export default {\n  title: \"Four Week Routine\",\n  weeks: [\n    {\n      title: \"First Week\",\n      days: 4,\n      exercises: [\n        exercise(\"Bench press\", 5, '10', '2010', 60, [10,11,11,11,11]),\n        exercise(\"Triceps dips\", 5, '6-10', '2110', 60, [6,8,8,8,8]),\n        exercise(\"Incline dumbbell press\", 3, '12-15', '2010', 60, [7.5, 7.5, 10]),\n        exercise(\"Incline dumbbell fly\", 3, '12-15', '2010', 60, [7.5, 7.5, 7.5]),\n        exercise(\"Triceps extension\", 3, '12-15', '2010', 60, [7.5, 10, 10]),\n      ]\n    }\n  ]\n};\n\nfunction exercise(name, sets, reps, tempo, rest, weights) {\n  return {\n    name,\n    sets,\n    reps,\n    tempo,\n    rest,\n    weights\n  };\n}\n","import React from 'react';\nimport './App.css';\nimport data from './data';\n\nfunction App() {\n  return (\n    <div>\n      <h1>Workout</h1>\n      <Training {...data} />\n    </div>\n  );\n}\n\nfunction Training({ title, weeks }) {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {weeks.map((week) => <Week key={week.title} {...week} />)}\n    </div>\n  );\n}\n\nfunction Week({ title, days, exercises }) {\n  return (\n    <div>\n      <h3>{title}</h3>\n      <p>Days: {days}</p>\n      {exercises.map((exercise) => <Exercise {...exercise} />)}\n    </div>\n  );\n}\n\nfunction Exercise({ name, sets, reps, tempo, rest, weights }) {\n  return (\n    <div>\n      <p>\n          {name} - {sets} / {reps} / {tempo} / {rest}s / [{weights.join(\", \")}]\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}