{"version":3,"sources":["data.js","components/stopwatch/index.js","components/set/index.js","App.js","serviceWorker.js","index.js"],"names":["data","title","weeks","days","exercises","exercise","name","sets","reps","tempo","rest","weights","style","border","padding","textAlign","fontFamily","fontSize","position","top","right","borderRadius","backgroundColor","boxShadow","StopWatch","state","seconds","handleRestartClick","window","clearInterval","_this","intervalId","setInterval","handleTick","setState","label","this","isNaN","minutes","Math","floor","toString","concat","padStart","react_default","a","createElement","aria-label","onClick","Component","display","margin","checkedStyle","textDecoration","opacity","Set","checked","handleClick","weight","props","Training","_ref","map","week","Week","Object","assign","key","weekStyle","borderTop","helpStyle","color","fontWeight","_ref2","Exercise","LabelAndValue","_ref3","value","_ref4","index","set_Set","App","stopwatch_StopWatch","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8KAAeA,eAAA,CACbC,MAAO,oBACPC,MAAO,CACL,CACED,MAAO,4BACPE,KAAM,yCACNC,UAAW,CACTC,EAAS,cAAe,EAAG,KAAM,OAAQ,GAAI,CAAC,GAAG,GAAG,GAAG,GAAG,KAC1DA,EAAS,eAAgB,EAAG,OAAQ,OAAQ,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,IACzDA,EAAS,yBAA0B,EAAG,QAAS,OAAQ,GAAI,CAAC,IAAK,IAAK,KACtEA,EAAS,uBAAwB,EAAG,QAAS,OAAQ,GAAI,CAAC,IAAK,IAAK,MACpEA,EAAS,oBAAqB,EAAG,QAAS,OAAQ,GAAI,CAAC,IAAK,GAAI,OAGpE,CACEJ,MAAO,0BACPE,KAAM,yCACNC,UAAW,CACTC,EAAS,UAAW,EAAG,OAAQ,OAAQ,GAAI,CAAC,GAAG,GAAG,GAAG,GAAG,KACxDA,EAAS,gBAAiB,EAAG,KAAM,OAAQ,GAAI,CAAC,IAAI,IAAI,IAAI,IAAI,MAChEA,EAAS,UAAW,EAAG,OAAQ,OAAQ,GAAI,CAAC,IAAK,IAAK,MACtDA,EAAS,uBAAwB,EAAG,QAAS,OAAQ,GAAI,CAAC,IAAK,IAAK,MACpEA,EAAS,sBAAuB,EAAG,QAAS,OAAQ,GAAI,CAAC,IAAK,IAAK,WAM3E,SAASA,EAASC,EAAMC,EAAMC,EAAMC,EAAOC,EAAMC,GAC/C,MAAO,CACLL,OACAC,OACAC,OACAC,QACAC,OACAC,kDCjCEC,EAAQ,CACZC,OAAQ,2BACRC,QAAS,MACTC,UAAW,SACXC,WAAY,YACZC,SAAU,QACVC,SAAU,QACVC,IAAK,MACLC,MAAO,MACPC,aAAc,OACdC,gBAAiB,QACjBC,UAAW,0BAGQC,6MACnBC,MAAQ,CACNC,QAAS,QAoBXC,mBAAqB,WACnBC,OAAOC,cAAcC,EAAKC,YAC1BD,EAAKC,WAAaH,OAAOI,YAAYF,EAAKG,WAAY,KAEtDH,EAAKI,SAAS,CAAER,QAAS,OAG3BO,WAAa,WACXH,EAAKI,SAAS,CACZR,QAASI,EAAKL,MAAMC,QAAU,6EAzBhC,IAAIS,EAAQC,KAAKX,MAAMC,QAEvB,IAAKW,MAAMF,GAAQ,CACjB,IAAIG,EAAUC,KAAKC,MAAML,EAAQ,IAAIM,WACjCf,GAAWS,EAAQ,IAAIM,WAE3BN,EAAK,GAAAO,OAAMJ,EAAQK,SAAS,EAAG,KAA1B,KAAAD,OAAkChB,EAAQiB,SAAS,EAAG,MAG7D,OACEC,EAAAC,EAAAC,cAAA,OAAKC,aAAW,SAASnC,MAAOA,EAAOoC,QAASZ,KAAKT,oBAClDQ,UAjB8Bc,aCdjCrC,EAAQ,CACZsC,QAAS,eACTpC,QAAS,OACTD,OAAQ,2BACRE,UAAW,SACXoC,OAAQ,cAGJC,EAAe,CACnBC,eAAgB,eAChBC,QAAS,MAGUC,6MACnB9B,MAAQ,CACN+B,SAAS,KA4BXC,YAAc,WACZ3B,EAAKI,SAAS,CACZsB,SAAU1B,EAAKL,MAAM+B,mFA3BhB,IAEHE,EAgBJ,OAbEA,EAJkBtB,KAAKX,MAAjB+B,QAKJZ,EAAAC,EAAAC,cAAA,QAAMlC,MAAOwC,GACVhB,KAAKuB,MAAMD,QAKdd,EAAAC,EAAAC,cAAA,YACGV,KAAKuB,MAAMD,QAMhBd,EAAAC,EAAAC,cAAA,OAAKlC,MAAOA,EAAOoC,QAASZ,KAAKqB,aAC9BC,UAzBwBT,aCCjC,SAASW,EAATC,GAAoC,IAAhB5D,EAAgB4D,EAAhB5D,MAAOC,EAAS2D,EAAT3D,MACzB,OACE0C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACG7C,GAEFC,EAAM4D,IAAI,SAACC,GAAD,OAAUnB,EAAAC,EAAAC,cAACkB,EAADC,OAAAC,OAAA,CAAMC,IAAKJ,EAAK9D,OAAW8D,OAKtD,IAAMK,EAAY,CAChBC,UAAW,4BACXlB,OAAQ,SAGJmB,EAAY,CAChBC,MAAO,iBACPtD,SAAU,QACVuD,WAAY,UAGd,SAASR,EAATS,GAA0C,IAA1BxE,EAA0BwE,EAA1BxE,MAAOE,EAAmBsE,EAAnBtE,KAAMC,EAAaqE,EAAbrE,UAC3B,OACEwC,EAAAC,EAAAC,cAAA,OAAKlC,MAAOwD,GACVxB,EAAAC,EAAAC,cAAA,UACG7C,EACD2C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMlC,MAAO0D,GACVnE,IAGJC,EAAU0D,IAAI,SAACzD,GAAD,OAAcuC,EAAAC,EAAAC,cAAC4B,EAADT,OAAAC,OAAA,CAAUC,IAAK9D,EAASC,MAAUD,OAKrE,SAASsE,EAATC,GAAyC,IAAhBzC,EAAgByC,EAAhBzC,MAAO0C,EAASD,EAATC,MAC9B,OACEjC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,QAAMlC,MAAO0D,GACVnC,GAEF,IACDS,EAAAC,EAAAC,cAAA,YACG+B,IAMT,SAASH,EAATI,GAA8D,IAA1CxE,EAA0CwE,EAA1CxE,KAAMC,EAAoCuE,EAApCvE,KAAMC,EAA8BsE,EAA9BtE,KAAMC,EAAwBqE,EAAxBrE,MAAOC,EAAiBoE,EAAjBpE,KAAMC,EAAWmE,EAAXnE,QACjD,OACEiC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACGxC,EACDsC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC6B,EAAD,CAAexC,MAAM,OAAO0C,MAAOtE,IAClC,IACDqC,EAAAC,EAAAC,cAAC6B,EAAD,CAAexC,MAAM,OAAO0C,MAAOrE,IAClC,IACDoC,EAAAC,EAAAC,cAAC6B,EAAD,CAAexC,MAAM,QAAQ0C,MAAOpE,IACnC,IACDmC,EAAAC,EAAAC,cAAC6B,EAAD,CAAexC,MAAM,OAAO0C,MAAK,GAAAnC,OAAKhC,EAAL,QAElCC,EAAQmD,IAAI,SAACJ,EAAQqB,GAAT,OACXnC,EAAAC,EAAAC,cAACkC,EAAD,CAAKb,IAAKY,EAAOrB,OAAQA,OAMlBuB,MAlFf,WACE,OACErC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAACc,EAAa5D,KCCdmF,EAAcC,QACW,cAA7BxD,OAAOyD,SAASC,UAEe,UAA7B1D,OAAOyD,SAASC,UAEhB1D,OAAOyD,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxE,QACfkE,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KC1FjEC,IAASC,OAAOhE,EAAAC,EAAAC,cAAC+D,EAAD,MAASC,SAASC,eAAe,SDgB1C,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,WAAwBrF,OAAOyD,SAAS6B,MACpDC,SAAWvF,OAAOyD,SAAS8B,OAIvC,OAGFvF,OAAOwF,iBAAiB,OAAQ,WAC9B,IAAM3B,EAAK,GAAA/C,OAAMuE,WAAN,sBAEP9B,GAgEV,SAAiCM,EAAOC,GAEtC2B,MAAM5B,GACHK,KAAK,SAAAwB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM9B,KAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,KAAK,WAC7BlE,OAAOyD,SAASyC,aAKpBtC,EAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEArFAyB,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM9B,KAAK,WACjCO,QAAQC,IACN,gHAMJd,EAAgBC,EAAOC,MCvC/BE","file":"static/js/main.40e436da.chunk.js","sourcesContent":["export default {\n  title: \"Four Week Routine\",\n  weeks: [\n    {\n      title: \"Week 1: Chest And Triceps\",\n      days: \"Saturday / Monday / Wednesday / Friday\",\n      exercises: [\n        exercise(\"Bench press\", 5, '10', '2010', 60, [10,11,11,11,11]),\n        exercise(\"Triceps dips\", 5, '6-10', '2110', 60, [6,8,8,8,8]),\n        exercise(\"Incline dumbbell press\", 3, '12-15', '2010', 60, [7.5, 7.5, 10]),\n        exercise(\"Incline dumbbell fly\", 3, '12-15', '2010', 60, [7.5, 7.5, 7.5]),\n        exercise(\"Triceps extension\", 3, '12-15', '2010', 60, [7.5, 10, 10]),\n      ]\n    },\n    {\n      title: \"Week 2: Back And Biceps\",\n      days: \"Sunday / Tuesday / Thursday / Saturday\",\n      exercises: [\n        exercise(\"Pull up\", 5, '6-10', '2011', 60, [10,10,10,10,10]),\n        exercise(\"Bent-over row\", 5, '10', '2010', 60, ['?','?','?','?','?']),\n        exercise(\"Chin-up\", 3, '6-10', '2011', 60, ['?', '?', '?']),\n        exercise(\"Standing biceps curl\", 3, '12-15', '2011', 60, ['?', '?', '?']),\n        exercise(\"Seated incline curl\", 3, '12-15', '2011', 60, ['?', '?', '?']),\n      ]\n    }\n  ]\n};\n\nfunction exercise(name, sets, reps, tempo, rest, weights) {\n  return {\n    name,\n    sets,\n    reps,\n    tempo,\n    rest,\n    weights\n  };\n}\n","import React, { Component } from 'react';\n\nconst style = {\n  border: '1px solid rgba(0,0,0,.1)',\n  padding: '1em',\n  textAlign: 'center',\n  fontFamily: 'monospace',\n  fontSize: '.8rem',\n  position: 'fixed',\n  top: '1em',\n  right: '1em',\n  borderRadius: '50px',\n  backgroundColor: 'white',\n  boxShadow: '2px 2px rgba(0,0,0,.1)'\n};\n\nexport default class StopWatch extends Component {\n  state = {\n    seconds: 'Go'\n  }\n\n  render() {\n    let label = this.state.seconds;\n\n    if (!isNaN(label)) {\n      let minutes = Math.floor(label / 60).toString();\n      let seconds = (label % 60).toString();\n\n      label = `${minutes.padStart(2, '0')}:${seconds.padStart(2, '0')}`;\n    }\n\n    return (\n      <div aria-label=\"button\" style={style} onClick={this.handleRestartClick}>\n        {label}\n      </div>\n    );\n  }\n\n  handleRestartClick = () => {\n    window.clearInterval(this.intervalId);\n    this.intervalId = window.setInterval(this.handleTick, 1000);\n\n    this.setState({ seconds: 0 });\n  }\n\n  handleTick = () => {\n    this.setState({\n      seconds: this.state.seconds + 1,\n    });\n  }\n}\n","import React, { Component } from 'react';\n\nconst style = {\n  display: 'inline-block',\n  padding: '.5em',\n  border: '1px solid rgba(0,0,0,.1)',\n  textAlign: 'center',\n  margin: '0 .5em 0 0'\n};\n\nconst checkedStyle = {\n  textDecoration: 'line-through',\n  opacity: '.5'\n};\n\nexport default class Set extends Component {\n  state = {\n    checked: false\n  }\n\n  render() {\n    const { checked } = this.state;\n    let weight;\n\n    if (checked) {\n      weight = (\n        <span style={checkedStyle}>\n          {this.props.weight}\n        </span>\n      );\n    } else {\n      weight = (\n        <span>\n          {this.props.weight}\n        </span>\n      );\n    }\n\n    return (\n      <div style={style} onClick={this.handleClick}>\n        {weight}\n      </div>\n    );\n  }\n\n  handleClick = () => {\n    this.setState({\n      checked: !this.state.checked\n    });\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport data from './data';\nimport StopWatch from './components/stopwatch';\nimport Set from './components/set';\n\nfunction App() {\n  return (\n    <div>\n      <h1>Workout</h1>\n      <StopWatch />\n      <Training {...data} />\n    </div>\n  );\n}\n\nfunction Training({ title, weeks }) {\n  return (\n    <div>\n      <h2>\n        {title}\n      </h2>\n      {weeks.map((week) => <Week key={week.title} {...week} />)}\n    </div>\n  );\n}\n\nconst weekStyle = {\n  borderTop: '1px dotted rgba(0,0,0,.1)',\n  margin: '1em 0'\n};\n\nconst helpStyle = {\n  color: 'rgba(0,0,0,.5)',\n  fontSize: '.8rem',\n  fontWeight: 'normal',\n};\n\nfunction Week({ title, days, exercises }) {\n  return (\n    <div style={weekStyle}>\n      <h3>\n        {title}\n        <br />\n        <span style={helpStyle}>\n          {days}\n        </span>\n      </h3>\n      {exercises.map((exercise) => <Exercise key={exercise.name} {...exercise} />)}\n    </div>\n  );\n}\n\nfunction LabelAndValue({ label, value }) {\n  return (\n    <span>\n      <span style={helpStyle}>\n        {label}\n      </span>\n      {' '}\n      <span>\n        {value}\n      </span>\n    </span>\n  );\n}\n\nfunction Exercise({ name, sets, reps, tempo, rest, weights }) {\n  return (\n    <div>\n      <h4>\n        {name}\n        <br />\n        <LabelAndValue label=\"Sets\" value={sets} />\n        {' '}\n        <LabelAndValue label=\"Reps\" value={reps} />\n        {' '}\n        <LabelAndValue label=\"Tempo\" value={tempo} />\n        {' '}\n        <LabelAndValue label=\"Rest\" value={`${rest}s`} />\n      </h4>\n      {weights.map((weight, index) =>\n        <Set key={index} weight={weight} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}